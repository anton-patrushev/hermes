/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 * @format
 */

'use strict';

declare type Options = {
  allowReturnOutsideFunction?: boolean,
  babel?: boolean,
  flow?: 'all' | 'detect',
  sourceFilename?: string,
  sourceType?: 'module' | 'script' | 'unambiguous',
  tokens?: boolean,
};

declare type Program = Object;

declare type PluginObject = {
  visitor: Object,
};

declare type PluginOptions = Object | void | false;
declare type Plugin = PluginObject | (({types: Object}) => PluginObject);
declare type PluginItem = Plugin | [Plugin, PluginOptions];
declare type PluginList = $ReadOnlyArray<PluginItem>;

declare module.exports: {
  parse(code: string, opts: Options): Program,
  transformFromAstSync(
    sourceAst: Program,
    source: string,
    options: {plugins: PluginList}
  ): {ast: Program},
};
